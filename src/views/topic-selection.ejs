<!DOCTYPE html>
<html>
<head>
    <title>KBC Quiz Game - Topic Selection</title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap');

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: radial-gradient(circle at center, #000066 0%, #000033 100%);
            color: white;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            padding: 20px;
            position: relative;
            overflow-x: hidden;
        }

        body::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><circle cx="50" cy="50" r="1" fill="rgba(255,255,255,0.2)"/></svg>') repeat;
            opacity: 0.1;
            z-index: -1;
            animation: twinkle 3s infinite alternate;
        }

        @keyframes twinkle {
            0% { opacity: 0.05; }
            100% { opacity: 0.15; }
        }

        .container {
            background: linear-gradient(145deg, rgba(0,0,102,0.9) 0%, rgba(0,0,153,0.9) 100%);
            padding: 40px;
            border-radius: 20px;
            box-shadow: 0 0 30px rgba(0,0,255,0.2);
            max-width: 900px;
            width: 100%;
            position: relative;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255,255,255,0.1);
        }

        .header {
            text-align: center;
            margin-bottom: 40px;
            padding: 20px;
            background: rgba(0,0,0,0.3);
            border-radius: 15px;
            border: 1px solid rgba(255,255,255,0.1);
        }

        h1 {
            font-size: 2.5em;
            color: #ffdd00;
            margin-bottom: 15px;
            text-transform: uppercase;
            letter-spacing: 2px;
            text-shadow: 0 0 10px rgba(255,221,0,0.5);
        }

        .subtitle {
            font-size: 1.2em;
            color: rgba(255,255,255,0.8);
            margin-bottom: 10px;
        }

        .topics-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-top: 30px;
        }

        .topic-form {
            width: 100%;
        }

        .topic-button {
            width: 100%;
            padding: 20px;
            background: linear-gradient(145deg, #000080 0%, #000066 100%);
            border: 2px solid rgba(255,255,255,0.1);
            border-radius: 15px;
            color: white;
            font-size: 1.1em;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 1px;
            position: relative;
            overflow: hidden;
        }

        .topic-button::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(
                90deg,
                transparent,
                rgba(255,255,255,0.1),
                transparent
            );
            transition: 0.5s;
        }

        .topic-button:hover::before {
            left: 100%;
        }

        .topic-button:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0,0,255,0.3);
            border-color: #ffdd00;
            background: linear-gradient(145deg, #0000cc 0%, #0000a6 100%);
        }

        .topic-icon {
            font-size: 1.5em;
            margin-bottom: 10px;
        }

        .topic-input-container {
            display: none;
            margin-top: 20px;
            text-align: center;
            padding: 20px;
            background: rgba(0,0,0,0.3);
            border-radius: 15px;
            border: 1px solid rgba(255,255,255,0.1);
        }

        .topic-input-container.show {
            display: block;
            animation: fadeIn 0.3s ease-in-out;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .topic-input {
            width: 100%;
            max-width: 400px;
            padding: 12px 20px;
            margin: 8px 0;
            border: 2px solid rgba(255,255,255,0.1);
            border-radius: 10px;
            background: rgba(0,0,0,0.2);
            color: white;
            font-size: 1em;
            outline: none;
            transition: all 0.3s ease;
        }

        .topic-input:focus {
            border-color: #ffdd00;
            box-shadow: 0 0 10px rgba(255,221,0,0.2);
        }

        .submit-btn {
            margin-top: 15px;
            padding: 12px 30px;
            background: linear-gradient(145deg, #ffdd00 0%, #ffa500 100%);
            border: none;
            border-radius: 10px;
            color: #000033;
            font-size: 1.1em;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .submit-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(255,221,0,0.3);
        }

        .topic-button[value="General Knowledge"]::after { content: "üéØ"; }
        .topic-button[value="Science & Technology"]::after { content: "üî¨"; }
        .topic-button[value="History"]::after { content: "üìö"; }
        .topic-button[value="Geography"]::after { content: "üåç"; }
        .topic-button[value="Sports"]::after { content: "‚öΩ"; }
        .topic-button[value="Entertainment"]::after { content: "üé¨"; }
        .topic-button[value="Literature"]::after { content: "üìñ"; }
        .topic-button[value="Current Affairs"]::after { content: "üì∞"; }

        .datetime-display {
            position: fixed;
            top: 20px;
            right: 20px;
            background: rgba(0, 0, 0, 0.5);
            padding: 10px 20px;
            border-radius: 10px;
            text-align: right;
            font-size: 1.1em;
            color: #ffdd00;
            border: 1px solid rgba(255, 221, 0, 0.3);
            backdrop-filter: blur(5px);
            z-index: 1000;
        }

        #current-time {
            font-size: 1.2em;
            font-weight: 600;
            margin-bottom: 5px;
        }

        #current-date {
            font-size: 0.9em;
            opacity: 0.9;
        }
    </style>
</head>
<body>
    <div class="datetime-display">
        <div id="current-time"></div>
        <div id="current-date"></div>
    </div>
    <div class="container">
        <div class="header">
            <h1>KBC Quiz Game</h1>
            <div class="subtitle">Choose your topic and specify what you'd like to be quizzed on</div>
        </div>
        <form class="topic-form" action="/game" method="POST">
            <div class="topics-grid">
                <button type="button" class="topic-button" value="Science">Science</button>
                <button type="button" class="topic-button" value="History">History</button>
                <button type="button" class="topic-button" value="Geography">Geography</button>
                <button type="button" class="topic-button" value="Sports">Sports</button>
                <button type="button" class="topic-button" value="Entertainment">Entertainment</button>
                <button type="button" class="topic-button" value="Literature">Literature</button>
                <button type="button" class="topic-button" value="Current Affairs">Current Affairs</button>
            </div>
            <div class="topic-input-container">
                <input type="hidden" name="selectedTopic" id="selectedTopic">
                <input type="text" name="topicSpecification" id="topicSpecification" class="topic-input" placeholder="Specify what you'd like to be quizzed on..." required>
                <button type="submit" class="submit-btn">Start Quiz</button>
            </div>
        </form>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const topicButtons = document.querySelectorAll('.topic-button');
            const topicInputContainer = document.querySelector('.topic-input-container');
            const selectedTopicInput = document.getElementById('selectedTopic');
            const topicSpecificationInput = document.getElementById('topicSpecification');

            // Update date and time
            function updateDateTime() {
                const now = new Date();
                
                // Format time
                const timeOptions = { 
                    hour: '2-digit', 
                    minute: '2-digit', 
                    second: '2-digit', 
                    hour12: true 
                };
                document.getElementById('current-time').textContent = now.toLocaleTimeString('en-US', timeOptions);
                
                // Format date
                const dateOptions = { 
                    weekday: 'long', 
                    year: 'numeric', 
                    month: 'long', 
                    day: 'numeric' 
                };
                document.getElementById('current-date').textContent = now.toLocaleDateString('en-US', dateOptions);
            }

            // Update immediately and then every second
            updateDateTime();
            setInterval(updateDateTime, 1000);

            topicButtons.forEach(button => {
                button.addEventListener('click', function() {
                    // Remove active class from all buttons
                    topicButtons.forEach(btn => btn.classList.remove('active'));
                    
                    // Add active class to clicked button
                    this.classList.add('active');
                    
                    // Set the selected topic value
                    selectedTopicInput.value = this.value;
                    
                    // Show the input container
                    topicInputContainer.classList.add('show');
                    
                    // Update placeholder text
                    topicSpecificationInput.placeholder = `What specific aspect of ${this.value} interests you?`;
                });
            });
        });
    </script>
</body>
</html>
